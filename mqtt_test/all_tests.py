#!/bin/python
# -*- coding: utf-8 -*-
# Created by 顾洋溢

"Combine tests for gnosis.xml.objectify package (req 2.3+)"

import smtplib
from email.mime.text import MIMEText            #MIMRText()定义邮件正文
from email.mime.multipart import MIMEMultipart  #MIMEMulipart模块构造带附件
import sys
import os
sys.path.append(os.getcwd() + "/" + "unite")
import unittest,doctest
from mqtt_test.unite import *
import HTMLTestRunner
import time
from email.header import Header
from mqtt_test.send_email import send_email


suite = doctest.DocTestSuite()
suite.addTest(unittest.makeSuite(test_user_uId_req_controlequipment.User_uId_req_controlequipmentTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_closetwoswitch.User_uId_req_control_closetwoswitchTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_equipmentname.User_uId_req_equipmentnameTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_equipmentstatus.User_uId_req_equipmentstatusTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_senselist.User_uId_req_senselistTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_sense_switch.User_uId_req_sense_switchTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_sense_add.User_uId_req_sense_addTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_sense_modify.User_uId_req_sense_modifyTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_sense_delete.User_uId_req_sense_deleteTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_arealist.User_uId_req_arealistTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_area_add.User_uId_req_area_addTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_area_modify.User_uId_req_area_modifyTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_area_delete.User_uId_req_area_deleteTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_equitmentlist.User_uId_req_equitmentlistTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_allownetwork.User_uId_req_allownetworkTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_forbidnetwork.User_uId_req_forbidnetworkTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_get_gatewayinfo.User_uId_req_get_gatewayinfoTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_modify_gatewayname.User_uId_req_modify_gatewaynameTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_creat_sixsenseswitch.User_uId_req_creat_sixsenseswitchTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_creat_sixsenseswitch.User_uId_req_creat_sixsenseswitchTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_modifyinfraredtstatus.User_uId_req_modifyinfraredtstatusTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_modifyinfraredtstatusoff.User_uId_req_modifyinfraredtstatusoffTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_openfire.User_uId_req_control_openfireTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_closefire.User_uId_req_control_closefireTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_opensocket.User_uId_req_control_opensocketTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_closesocket.User_uId_req_control_closesocketTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_opencurtains.User_uId_req_control_opencurtainsTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_closecurtains.User_uId_req_control_stopcurtainsTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_stopcurtains.User_uId_req_control_closecurtainsTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_closecurtains.User_uId_req_control_stopcurtainsTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_openmetalswitch.User_uId_req_control_openmetalswitchTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_closemetalswitch.User_uId_req_control_closemetalswitchTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_openmetaltwoswitch.User_uId_req_control_openmetaltwoswitchTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_closemetaltwoswitch.User_uId_req_control_closemetaltwoswitchTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_openmetalthreeswitch.User_uId_req_control_openmetalthreeswitchTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_closemetalthreeswitch.User_uId_req_control_closemetalthreeswitchTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_openembeddedtwoswitch.User_uId_req_control_openembeddedtwoswitchTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_closeembeddedtwoswitch.User_uId_req_control_closeembeddedtwoswitchTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_openembeddedswitch.User_uId_req_control_openembeddedswitchTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_closeembeddedswitch.User_uId_req_control_closeembeddedswitchTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_openBclock.User_uId_req_control_openBclockTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_modifygasstatus.User_uId_req_modifygasstatusTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_modifygasstatusoff.User_uId_req_modifygasstatusoffTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_openxuanwuhulock.User_uId_req_control_openxuanwuhulockTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_openpasswordlock.User_uId_req_control_openpasswordlockTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_openpassword2lock.User_uId_req_control_openpassword2lockTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_modifywatersensorstatus.User_uId_req_modifywatersensorstatusTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_openswitch.User_uId_req_control_openswitchTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_closeswitch.User_uId_req_control_closeswitchTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_stewardlist.User_uId_req_stewardlistTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_creat_steward.User_uId_req_creat_stewardTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_close_steward.User_uId_req_close_stewardTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_delete_steward.User_uId_req_delete_stewardTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_modifysmokedetectorstatus.User_uId_req_modifysmokedetectorstatusTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_opennetworklock.User_uId_req_control_opennetworklockTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_inquirenetworklock.User_uId_req_control_inquirenetworklockTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_networklockbindsense.User_uId_req_control_networklockbindsenseTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_networklockunbindsense.User_uId_req_control_networklockunbindsenseTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_getBclockinfo.User_uId_req_control_getBclockinfoTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_intoBclock.User_uId_req_control_intoBclockTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_opengeneralalarm.User_uId_req_control_opengeneralalarmTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_closefire.User_uId_req_control_closefireTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_openmobilesocket.User_uId_req_control_openmobilesocketTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_closemobilesocket.User_uId_req_control_closemobilesocketTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_modifydoorbellstatus0.User_uId_req_modifydoorbellstatus0TestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_modifydoorbellstatus1.User_uId_req_modifydoorbellstatus1TestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_allowdoorbellacoustooptic.User_uId_req_allowdoorbellacoustoopticTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_forbiddoorbellacoustooptic.User_uId_req_forbiddoorbellacoustoopticTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_playdoorbellmusic.User_uId_req_playdoorbellmusicTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_modifydoorbellmusic.User_uId_req_modifydoorbellmusicTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_modifydoorbellvolume.User_uId_req_modifydoorbellvolumeTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_get_DINparameter.User_uId_req_get_DINparameterTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_openDINswitch.User_uId_req_control_openDINswitchTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_closeDINswitch.User_uId_req_control_closeDINswitchTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_touchdimmingswitch.User_uId_req_control_touchdimmingswitchTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_touchdimmingswitch100.User_uId_req_control_touchdimmingswitch100TestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_touchdimmingswitch0.User_uId_req_control_touchdimmingswitch0TestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_doubleopen1curtain.User_uId_req_control_doubleopen1curtainTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_doubleclose1curtain.User_uId_req_control_doubleclose1curtainTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_doublestop1curtain.User_uId_req_control_doublestop1curtainTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_doubleopen2curtain.User_uId_req_control_doubleopen2curtainTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_doubleclose2curtain.User_uId_req_control_doubleclose2curtainTestCase))
suite.addTest(unittest.makeSuite(test_user_uId_req_control_doublestop2curtain.User_uId_req_control_doublestop2curtainTestCase))




resultname = os.path.join(os.getcwd()+'\\'+'result.html')           #'result.html'
print(resultname)
file_result = open(resultname, 'wb')
runner = HTMLTestRunner.HTMLTestRunner(stream = file_result, title = "物联mqtt通信自动化测试报告", description = "用例执行情况:")
runner.run(suite)
#send_email()
file_result.close()





